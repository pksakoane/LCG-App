import { ComponentRef, ComponentFactory, ViewContainerRef, Type, ComponentFactoryResolver, ChangeDetectorRef, ApplicationRef, OnDestroy } from '@angular/core';
/**
 * Wrapper component used for loading components when navigating
 * It uses DetachedContainer as selector so that it is containerRef is not attached to
 * the visual tree.
 */
export declare class DetachedLoader implements OnDestroy {
    private resolver;
    private changeDetector;
    private containerRef;
    private appRef;
    private disposeFunctions;
    constructor(resolver: ComponentFactoryResolver, changeDetector: ChangeDetectorRef, containerRef: ViewContainerRef, appRef: ApplicationRef);
    private loadInLocation;
    ngOnDestroy(): void;
    detectChanges(): void;
    loadComponent(componentType: Type<any>): Promise<ComponentRef<any>>;
    loadWithFactory<T>(factory: ComponentFactory<T>): ComponentRef<T>;
}
