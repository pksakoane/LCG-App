import { ElementRef, OnDestroy } from '@angular/core';
import { ActionItem, NavigationButton, Page } from '@nativescript/core';
import * as ɵngcc0 from '@angular/core';
export declare function isActionItem(view: any): view is ActionItem;
export declare function isNavigationButton(view: any): view is NavigationButton;
export declare class ActionBarComponent {
    element: ElementRef;
    private page;
    constructor(element: ElementRef, page: Page);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ActionBarComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ActionBarComponent, "ActionBar", never, {}, {}, never, ["*"]>;
}
export declare class ActionBarScope {
    private page;
    constructor(page: Page);
    onNavButtonInit(navBtn: NavigationButtonDirective): void;
    onNavButtonDestroy(navBtn: NavigationButtonDirective): void;
    onActionInit(item: ActionItemDirective): void;
    onActionDestroy(item: ActionItemDirective): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ActionBarScope, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ActionBarScope, "ActionBarExtension", never, {}, {}, never, never>;
}
export declare class ActionItemDirective implements OnDestroy {
    element: ElementRef;
    private ownerScope;
    constructor(element: ElementRef, ownerScope: ActionBarScope);
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ActionItemDirective, [null, { optional: true; }]>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<ActionItemDirective, "ActionItem", never, {}, {}, never>;
}
export declare class NavigationButtonDirective implements OnDestroy {
    element: ElementRef;
    private ownerScope;
    constructor(element: ElementRef, ownerScope: ActionBarScope);
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NavigationButtonDirective, [null, { optional: true; }]>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<NavigationButtonDirective, "NavigationButton", never, {}, {}, never>;
}

//# sourceMappingURL=action-bar.d.ts.map