{"version":3,"file":"ns-router-link.d.ts","sources":["ns-router-link.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, NgZone } from '@angular/core';\nimport { ActivatedRoute, Router, UrlTree } from '@angular/router';\nimport { NavigationTransition } from '@nativescript/core';\nimport { RouterExtensions } from './router-extensions';\nexport declare type QueryParamsHandling = 'merge' | 'preserve' | '';\n/**\n * The nsRouterLink directive lets you link to specific parts of your app.\n *\n * Consider the following route configuration:\n * ```\n * [{ path: \"/user\", component: UserCmp }]\n * ```\n *\n * When linking to this `User` route, you can write:\n *\n * ```\n * <a [nsRouterLink]=\"[\"/user\"]\">link to user component</a>\n * ```\n *\n * NSRouterLink expects the value to be an array of path segments, followed by the params\n * for that level of routing. For instance `[\"/team\", {teamId: 1}, \"user\", {userId: 2}]`\n * means that we want to generate a link to `/team;teamId=1/user;userId=2`.\n *\n * The first segment name can be prepended with `/`, `./`, or `../`.\n * If the segment begins with `/`, the router will look up the route from the root of the app.\n * If the segment begins with `./`, or doesn\"t begin with a slash, the router will\n * instead look in the current component\"s children for the route.\n * And if the segment begins with `../`, the router will go up one level.\n */\nexport declare class NSRouterLink {\n    private ngZone;\n    private router;\n    private navigator;\n    private route;\n    private el;\n    target: string;\n    queryParams: {\n        [k: string]: any;\n    };\n    fragment: string;\n    queryParamsHandling: QueryParamsHandling;\n    preserveQueryParams: boolean;\n    preserveFragment: boolean;\n    skipLocationChange: boolean;\n    replaceUrl: boolean;\n    clearHistory: boolean;\n    pageTransition: boolean | string | NavigationTransition;\n    pageTransitionDuration: any;\n    private commands;\n    constructor(ngZone: NgZone, router: Router, navigator: RouterExtensions, route: ActivatedRoute, el: ElementRef);\n    ngAfterViewInit(): void;\n    set params(data: any[] | string);\n    private getExtras;\n    get urlTree(): UrlTree;\n    private convertClearHistory;\n    private getTransition;\n}\n"]}