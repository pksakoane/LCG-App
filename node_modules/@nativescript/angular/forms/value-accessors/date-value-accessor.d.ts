import { ElementRef } from '@angular/core';
import { BaseValueAccessor } from './base-value-accessor';
import { DatePicker } from '@nativescript/core';
/**
 * The accessor for setting a date and listening to changes that is used by the
 * {@link NgModel} directives.
 *
 *  ### Example
 *  ```
 *  <DatePicker [(ngModel)]="model.test">
 *  ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class DateValueAccessor extends BaseValueAccessor<DatePicker> {
    constructor(elementRef: ElementRef);
    writeValue(value: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DateValueAccessor, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<DateValueAccessor, "DatePicker[ngModel],DatePicker[formControlName],DatePicker[formControl],datepicker[ngModel],datepicker[formControlName],datepicker[formControl],datePicker[ngModel],datePicker[formControlName],datePicker[formControl],date-picker[ngModel],date-picker[formControlName],date-picker[formControl]", never, {}, {}, never>;
}

//# sourceMappingURL=date-value-accessor.d.ts.map