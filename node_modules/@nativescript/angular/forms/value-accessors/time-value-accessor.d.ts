import { ElementRef } from '@angular/core';
import { BaseValueAccessor } from './base-value-accessor';
import { TimePicker } from '@nativescript/core';
/**
 * The accessor for setting a time and listening to changes that is used by the
 * {@link NgModel} directives.
 *
 *  ### Example
 *  ```
 *  <TimePicker [(ngModel)]="model.test">
 *  ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class TimeValueAccessor extends BaseValueAccessor<TimePicker> {
    constructor(elementRef: ElementRef);
    writeValue(value: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TimeValueAccessor, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<TimeValueAccessor, "TimePicker[ngModel],TimePicker[formControlName],TimePicker[formControl],timepicker[ngModel],timepicker[formControlName],timepicker[formControl],timePicker[ngModel],timePicker[formControlName],timePicker[formControl],time-picker[ngModel],time-picker[formControlName],time-picker[formControl]", never, {}, {}, never>;
}

//# sourceMappingURL=time-value-accessor.d.ts.map