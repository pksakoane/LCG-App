import { ElementRef } from '@angular/core';
import { BaseValueAccessor } from './base-value-accessor';
import { Switch } from '@nativescript/core';
/**
 * The accessor for setting a checked property and listening to changes that is used by the
 * {@link NgModel} directives.
 *
 *  ### Example
 *  ```
 *  <Switch [(ngModel)]="model.test">
 *  ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class CheckedValueAccessor extends BaseValueAccessor<Switch> {
    constructor(elementRef: ElementRef);
    writeValue(value: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CheckedValueAccessor, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<CheckedValueAccessor, "Switch[ngModel],Switch[formControlName],Switch[formControl],switch[ngModel],switch[formControlName],switch[formControl]", never, {}, {}, never>;
}

//# sourceMappingURL=checked-value-accessor.d.ts.map