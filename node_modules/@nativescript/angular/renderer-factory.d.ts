import { RendererFactory2, NgZone, RendererType2 } from '@angular/core';
import { View } from '@nativescript/core';
import { ViewUtil } from './view-util';
import { NgView } from './element-registry';
import { NativeScriptRenderer } from './renderer';
import * as ɵngcc0 from '@angular/core';
export declare class NativeScriptRendererFactory implements RendererFactory2 {
    private zone;
    componentRenderers: Map<string, NativeScriptRenderer>;
    viewUtil: ViewUtil;
    defaultRenderer: NativeScriptRenderer;
    rootNgView: NgView;
    constructor(rootView: View, zone: NgZone);
    private setRootNgView;
    createRenderer(element: any, type: RendererType2): NativeScriptRenderer;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NativeScriptRendererFactory, [{ optional: true; }, null]>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<NativeScriptRendererFactory>;
}

//# sourceMappingURL=renderer-factory.d.ts.map